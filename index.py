import dashimport dash_authimport dash_html_components as htmlimport dash_core_components as dccfrom dash.dependencies import Input, Outputimport plotly.graph_objs as goimport pandas as pddata1 = pd.read_csv('Negative_Change_April_2021.csv')data2=pd.read_csv('outside_jurisdiction_of_Panvel_Municipal_Corporation_April_2021.csv')data3=pd.read_csv('within_jurisdiction_of_Panvel_Municipal_Corporation_withdata_April_2021.csv')data4=pd.read_csv('within_jurisdiction_of_Panvel_Municipal_Corporation_withnodata_April_2021.csv')app = dash.Dash(__name__, meta_tags=[{"name": "viewport", "content": "width=device-width"}])server = app.serverauth = dash_auth.BasicAuth(    app,    {'Admin': 'Panvel',     'akhil': 'secure'})app.layout = html.Div([    html.Div([        html.Div([            html.Img(src=app.get_asset_url('Panvelimg-modified.png'),                     id = 'corona-image',                     style={'height': '180px',                            'width': 'auto',                            'margin-bottom': '35px',                            'font-family':'Tahoma'})        ], className='one-third column'),        html.Div([            html.Div([                html.H3('PANVEL MUNICIPAL CORPORATION', style={'margin-bottom': '10px', 'color': 'white','font-style': 'Monaco','font-size':'40px'}),                html.H5('Portal', style={'margin-bottom': '0px', 'color': 'DodgerBlue'})            ])        ], className='one-half column', id = 'title'),        html.Div([            html.H6('Last Updated: ' + str('29-09-2021') ,                    style={'color': '#999900'})        ], className='one-third column', id = 'title1')    ], id = 'header', className= 'row flex-display', style={'margin-bottom': '25px'}),         html.Div([        html.Div([            html.H6(children='Negative Change ',                    style={'textAlign': 'center',                           'color': 'white'}),            html.P(f"{data1['FID'].count():,.0f}",                    style={'textAlign': 'center',                           'color': 'orange',                           'fontSize': 80})           # html.P('new: ' + f"{covid_data_1['confirmed'].iloc[-1] - covid_data_1['confirmed'].iloc[-2]:,.0f}"                  # + ' (' + str(round(((covid_data_1['confirmed'].iloc[-1] - covid_data_1['confirmed'].iloc[-2]) /                               #    covid_data_1['confirmed'].iloc[-1]) * 100, 2)) + '%)',                  # style={'textAlign': 'center',                       #   'color': 'orange',                         # 'fontSize': 15,                         # 'margin-top': '-18px'})        ], className='card_container three columns'),html.Div([            html.H6(children='CIDCO Jurisdiction ',                    style={'textAlign': 'center',                           'color': 'white'}),            html.P(f"{data2['FID'].count():,.0f}",                    style={'textAlign': 'center',                           'color': '#dd1e35',                           'fontSize': 80})           # html.P('new: ' + f"{covid_data_1['death'].iloc[-1] - covid_data_1['death'].iloc[-2]:,.0f}"                  # + ' (' + str(round(((covid_data_1['death'].iloc[-1] - covid_data_1['death'].iloc[-2]) /                            #       covid_data_1['death'].iloc[-1]) * 100, 2)) + '%)',                  # style={'textAlign': 'center',                      #    'color': '#dd1e35',                        #  'fontSize': 15,                         # 'margin-top': '-18px'})        ], className='card_container three columns'),html.Div([            html.H6(children='Jurisdiction with data ',                    style={'textAlign': 'center',                           'color': 'white'}),            html.P(f"{data3['FID'].count():,.0f}",                    style={'textAlign': 'center',                           'color': 'green',                           'fontSize': 80})           # html.P('new: ' + f"{covid_data_1['recovered'].iloc[-1] - covid_data_1['recovered'].iloc[-2]:,.0f}"                  # + ' (' + str(round(((covid_data_1['recovered'].iloc[-1] - covid_data_1['recovered'].iloc[-2]) /                          #         covid_data_1['recovered'].iloc[-1]) * 100, 2)) + '%)',                   #style={'textAlign': 'center',                          #'color': 'green',                          #'fontSize': 15,                          #'margin-top': '-18px'})        ], className='card_container three columns'),html.Div([            html.H6(children='Jurisdiction with no data',                    style={'textAlign': 'center',                           'color': 'white'}),            html.P(f"{data4['FID'].count():,.0f}",                    style={'textAlign': 'center',                           'color': '#e55467',                           'fontSize': 80})            #html.P('new: ' + f"{covid_data_1['active'].iloc[-1] - covid_data_1['active'].iloc[-2]:,.0f}"                 #  + ' (' + str(round(((covid_data_1['active'].iloc[-1] - covid_data_1['active'].iloc[-2]) /                     #              covid_data_1['active'].iloc[-1]) * 100, 2)) + '%)',                  # style={'textAlign': 'center',                       #   'color': '#e55467',                         # 'fontSize': 15,                         # 'margin-top': '-18px'})        ], className='card_container three columns'),    ], className='row flex display'),    html.Div([html.Div([html.Iframe(srcDoc =open('PanvelDashFinal.html').read(),height='500',width='1250')                                ], className='create_container1 twelve columns')    ], className='row flex-display')], id = 'mainContainer', style={'display': 'flex', 'flex-direction': 'column'})if __name__ == '__main__':    app.run_server(port=8080,debug=True)